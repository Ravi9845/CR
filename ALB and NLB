#!/bin/bash
################################################################################
# This script deploys C&RSoftware Debt Manager for JBoss based installs.
# when it hasn't already happened.  It also provides detailed exit codes should
# any step fail.
#
# Usage Example:
# ./jboss.sh
#
# Valid for OnPrem 13.0 and above.  Updated to handle flyway.
# No longer supports portal or Oracle DB.
################################################################################
# Script Variables
myFileName=$(basename ${BASH_SOURCE[0]})
myShortName=${_myFileName%.*}
scriptVersion=1.0.0
hasCLIErrors=false

# Template Variables
# Implemented: debtmanager_version, database_server, multiByte, rules_type, upgrade_type
# Future: carte_ip, carte_port, etl_path

while [ $# -ne 0 ]; do
	case $1 in
		# The Debt Manager version to be installed.
		-v|--debtmanager_version)
			if [ -z "$2" ]; then
				hasCLIErrors=true
				echo "ERROR:  Debt Manager version must be provided.  See --help for more information." >&2
			else
				debtManagerVersion=$2
				shift
			fi
		;;

		# The database server name to be used when pulling the secret from secrets manager. devops/cicd/db/<name>/credentials
		-d|--database_server)
			if [ -z "$2" ]; then
				hasCLIErrors=true
				echo "ERROR:  Database server name must be provided.  See --help for more information." >&2
			else
				databaseServerShortName=$2
				shift
			fi
		;;

		# How the database/rules are to be handled. [ create, rebuild, update, nothing ].
		#  - ANT: To maintain backward compatability with older scripts.
		#      - Database will be created/recreated and populated with ANT build QA data.  Rules will be (re)built.
		#      - Older scripts key off of ANT or not.  So anything that isn't ANT is treated like "nothing" below.
		#  - UPGRADE: To maintain backward compatibility with older scripts.a
		#  - create: Database will be (re)created and populated with flywaymigrate QA data.  Rules will be (re)built.
		#  - rebuild: Same actions as create.
		#  - update: Database will be updated with flywaymigrate QA data.  Rules will be left alone.
		#  - nothing: No actions will be taken for DB or Rules.
		-u|--upgrade_type)
			if [ -z "$2" ]; then
				hasCLIErrors=true
				echo "ERROR: An Upgrade type must be provided.  See --help for more information." >&2
			else
				upgradeType=${2}
				if ! [[ "$upgradeType" =~ ^(ANT|UPGRADE|create|rebuild|update|nothing)$ ]]; then
					hasCLIErrors=true
					echo "ERROR: Invalid upgrade type. See --help for more information." >&2
				fi
				shift
			fi
		;;

		# The multibyte flag for SQLSERVER deployments.
		-m|--multiByte)
			if [ -z "$2" ]; then
				hasCLIErrors=true
				echo "ERROR:  Multibyte value must be provided.  See --help for more information." >&2
			else
				multiByte=$2
				shift
			fi
		;;

		# The type of rules to be used.  BLAZE or DROOLS.
		-r|--rules_type)
			if [ -z "$2" ]; then
				hasCLIErrors=true
				echo "ERROR: Rules type must be provided.  See --help for more information." >&2
			else
				rulesType=$2
				shift
			fi
		;;

		# Help
		-h|--help)
			cat <<EOHELP
Usage:
${_myShortName} [-v] [-d] [-u] \\
    [-v DebtManager Version] \\
    [-d Database Server Short Name] \\
    [-u Upgrade Type]
OR
${_myShortName} [--help] [--debtmanager_version] [--database_server] [--upgrade_type] \\
    [--debtmanager_version R11.X.X.X.X.X] \\
    [--database_server msdba] \\
    [--upgrade_type create, rebuild, update, nothing ]

Where:
    -h, --help              	Display this help text and quit.
    -v, --debtmanager_version   The version of Debt Manager to be installed.
								DM-R11.X.X.X.X.X
    -d, --database_server BLAZE_DIR
                            The directory -- usually on a shared file-system
                            mount -- into which Blaze repository is to be
                            installed.
    -o, --owner JBOSS_OWNER The user which will own the Blaze repository files;
                            default:  jboss.
    -g, --group JBOSS_GROUP The group which will own the Blaze repository files;
                            default:  jboss.
    -u, --upgrade_type      How the database/rules are to be handled.
							create - Cleans and or creates database and runs flywaymigrate QA data.  (Re)builds rules.
							rebuild - Same actions as create.
							update - Updates database with flywaymigrate seed data. No action taken for Rules.
							nothing - No actions are taken for DB or Rules.

Ownership of BLAZE_DIR files is not verified by --noop.

Exit States:
  When --noop is set:
    0:  BLAZE_DIR exists and is populated.
    1:  One or more command-line arguments are missing or invalid.
    2:  BLAZE_DIR is missing or is empty.
    3:  Unable to create or enter BLAZE_DIR.
    4:  Unable to copy files into BLAZE_DIR.

Version: ${_scriptVersion}
EOHELP
			exit 0
		;;
    #Commented out due to error in jboss type deployments
		# Check for unknown arguments
		*)
			#hasCLIErrors=true
			#echo "ERROR:  Unknown option: ${1}.  See --help for more information." >&2
		;;
	esac
	shift
done

if $hasCLIErrors; then
	exit 1
fi

# Secrets Manager Variables
dbInfo=$(aws secretsmanager get-secret-value --secret-id devops/cicd/db/${databaseServerShortName}/credentials | yaml-get -p SecretString)
databaseUser=$(echo $dbInfo | yaml-get -p username)
databaseUserPassword=$(echo $dbInfo | yaml-get -p password)
databaseType=$(echo $dbInfo | yaml-get -p engine | tr '[:lower:]' '[:upper:]')
databaseServer=$(echo $dbInfo | yaml-get -p host)
databasePort=$(echo $dbInfo | yaml-get -p port)

# Hostname
serverName=$(hostname)
sed -i '/update_hostname/d;/set_hostname/d;/ssh_pwauth/a preserve_hostname: true' /etc/cloud/cloud.cfg
sed -i "/127.0.0.1/ s/$/ $serverName/g" /etc/hosts

# Users
useradd -m cm
echo "cm:root1234@" | chpasswd
echo "cm        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers

# Install SQLCMD
/ConfigurationManagement/maint/scripts/components/install_sqlcmd.sh

#Installing JAVA
yum install -y java-1.8.0-openjdk-1.8.0.432*

# Install Docker
/ConfigurationManagement/maint/scripts/components/install_docker.sh

#Installing Merchant-ORCC Certificiate
echo yes | keytool -import -alias networksolutionsevserverca -keystore /etc/pki/java/cacerts  -storepass changeit -file /ConfigurationManagement/Certs/NetworkSolutionsCertificateAuthority.crt

#Prepping JBOSS
cd /
mkdir jboss-eap
chown -R cm:cm /jboss-eap
cd /home/cm
ln -s /ConfigurationManagement/maint/scripts/Maintain64.sh
chmod +x Maintain64.sh
echo "alias maint='cd /home/cm;./Maintain64.sh'" >> /home/cm/.bashrc
echo -e "JBOSS_HOME=/jboss-eap
UPGRADE_DIR=/ConfigurationManagement/DailyBuilds
SETUP_FILES=/ConfigurationManagement/maint
APACHE_HTDOCS=/apps/Apache/htdocs" > /home/cm/maint.properties
chown cm:cm /home/cm/maint.properties

#Installing Apache
echo "debtmanager_version: ${debtManagerVersion}
database_type: ${databaseType}" > /tmp/env_props.yaml
/ConfigurationManagement/maint/scripts/components/install_apache.sh

#Installing Cups-PDF
#/ConfigurationManagement/maint/scripts/components/install_cups.sh

#Required for QA Selenium Automation Testing
#/ConfigurationManagement/maint/scripts/components/install_selenium.sh

# Installing Open API Spec and Swagger UI (For Daily Builds Only)
mkdir -p /apps/Apache/htdocs/dm-rest-api
cd /apps/Apache/htdocs/dm-rest-api

dmZipName=${debtManagerVersion}-${databaseType}
if [ ! -f /ConfigurationManagement/DailyBuilds/${debtManagerVersion}/${dmZipName}.zip ]; then
	dmZipName=${debtManagerVersion}-JBOSS
fi
unzip -j "/ConfigurationManagement/DailyBuilds/${debtManagerVersion}/${dmZipName}.zip" "${dmZipName}/resource/dm-rest-api-openapi-spec-DM-R*.zip" -d .
unzip dm-rest-api-openapi-spec-DM-R*.zip

ln -s dm-rest-api-openapi-specification-DM-R*.yaml dm-rest-api-openapi-specification.yaml
unzip dm-rest-api-samples-DM-R*.zip
rm -Rf dm-rest-api-samples-DM-R*.zip
mv dm-rest-api-openapi-specification-DM-R*.yaml dm-rest-api-openapi-specification.yaml
cd ..
unzip /ConfigurationManagement/InfrastructurePackages/SwaggerUI/swagger-ui*.zip
mv swagger-ui-* swagger-ui
chown -R cm:cm swagger-ui dm-rest-api

sed -i "s|https://petstore.swagger.io/v2/swagger.json|http://${serverName}.dm.crsdev.com/dm-rest-api/dm-rest-api-openapi-specification.yaml|g" swagger-ui/index.html

#Installing OpenOffice
source /ConfigurationManagement/maint/scripts/components/install_openoffice.sh

#Variables
DIRECTORY=$(echo $serverName | tr '[:upper:]' '[:lower:]')
SERVER_IP=$(ip a | grep inet | grep eth0 | awk -F' ' '{print $2}' | awk -F'/' '{print $1}')
dmfsDirectory="/usr/local/dm"


# Fresh Configuration Every Time

if [ ! -d "${dmfsDirectory}" ]; then
	echo "DMFS does not exist yet"
	mkdir -p "${dmfsDirectory}"
	chown -R cm:cm "${dmfsDirectory}"
else
	if [ "$upgrade_type" == "ANT" ]; then
	    echo "Cleaning DMFS for ANT build"
		rm -Rf "${dmfsDirectory}"/dmfs/config/*
		rm -Rf "${dmfsDirectory}"/dmfs/jacoco/*
		rm -Rf "${dmfsDirectory}"/dmfs/dm-blaze
	else
		echo "Using Existing DMFS"
	fi
fi

#Installing DebtManager
echo -e "DIRECTORY=$DIRECTORY
# PORTAL (YES|NO)
PORTAL=NO
# RTYPE (DROOLS|BLAZE)
RTYPE=$rulesType
# DBSERVER
DBSERVER=$databaseServer
# DBTYPE (SQLSERVER|ORACLE|POSTGRES)
DBTYPE=$databaseType
# MULTIBYTE (YES|NO)
MULTIBYTE=$multiByte
# ENV_TYPE (ANT|UPGRADE)
ENV_TYPE=$upgradeType" > /home/cm/jenkinsautoinstall

# Install DebtManager
sudo -H -u cm bash -c "cd ~;./Maintain64.sh AUTO $debtManagerVersion"

#Installing DMPS Certificate
echo "alias refreshcert=/ConfigurationManagement/maint/scripts/tools/refreshcert.sh" >> ~/.bashrc; source ~/.bashrc
/ConfigurationManagement/maint/scripts/tools/refreshcert.sh

# Configuring DMPS Integration And Carte Properties
# echo -e "titanium.streaming.host.name=dmps_ip
# titanium.arevent.data.streaming.url=https://dmps_ip:8443/dmip-gw/dmip/data-receiver/AREventTopic?create=true&partition=1
# titanium.financial.transaction.data.streaming.url=https://dmps_ip:8443/dmip-gw/dmip/data-receiver/FinancialTransactionTopic?create=true&partition=1
# titanium.dialer.data.streaming.url=https://dmps_ip:8443/dmip-gw/data-receiver/DialerTopic?create=true&partition=1
# titanium.streaming.path.root=https://dmps_ip:8443/dmip-gw/custom_login.jsp
# titanium.etl.kettle.carte.url=http://$carte_ip:$carte_port/kettle
# titanium.etl.kettle.job.path=$etl_path/standard-PDI/" >> /jboss-eap/$DIRECTORY/domain/main/dm-env-override.properties

#Configure for Okta
#/ConfigurationManagement/maint/scripts/components/configure_okta.sh $DIRECTORY $databaseServer

# Permissions
chown -R cm:cm /jboss-eap/$DIRECTORY
chmod -R 777 /usr/local/dm/
#Enabling Data Streaming In Database
/opt/mssql-tools/bin/sqlcmd -S $databaseServer -U $databaseUser -P $databaseUserPassword -Q "use ${serverName}_oltp ;update agncy_Config set agncy_config_item_crrnt_val_txt = 'Y' where config_Item_id in (select config_Item_id from config_Item where config_item_rsrc_ky_txt = 'config.agency.stream.data.message.key');"

# Start DebtManager
cd /jboss-eap/$DIRECTORY/bin/
sudo -H -u cm bash -c './START_DM_Host_Controller.sh &'
