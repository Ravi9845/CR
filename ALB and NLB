#
##########################################################################################
#
#    This material is the confidential, proprietary, unpublished property
#    of Jonas Collections & Recovery.  Receipt or possession of this material
#    does not convey rights to divulge, reproduce, use, or allow others
#    to use it without the specific written authorization of Jonas Collections & Recovery
#    and use must conform strictly to the license agreement.
#
#    Copyright (c) 2024 Jonas Collections & Recovery.  All rights reserved.
#    Version-1.0.0
#########################################################################################
#
AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for NLB, TGs, ALB for Application.
Parameters:
  Namespace:
    Type: String
    Default: dm
  SubnetId1:
    Type: String
    Description: The first private subnet for network load balancer.
  SubnetId2:
    Type: String
    Description: The second private subnet for network load balancer.
  SubnetId3:
    Type: String
    Description: The third private subnet for network load balancer.
  VPCId:
    Type: String
    Description: The VPC id of Application account.
  VPCidr:
    Type: String
    Description: The VPC cidr of Application account.
  GatewayVPCidr:
    Type: String
    Description: The VPC cidr for the region specific gateway account.
  certificateArn:
    Type: String
    Description: SSL/TLS certificate
Resources:
  PvtLinkSecurityGroupNLB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${Namespace}-pvtlink-inbound'
      GroupDescription: 'This security group will internal traffic'
      VpcId: '{{resolve:ssm:dm-vpc-VPCId:1}}'
      SecurityGroupIngress:
        - Description: 'Grant access to local traffic flow'
          IpProtocol: '-1'
          CidrIp: !Ref VPCidr
        - Description: 'Grant access to  port 443 from Gateway account'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref GatewayVPCidr
      SecurityGroupEgress:
        - Description: 'Grant access to local traffic flow'
          IpProtocol: '-1'
          CidrIp: !Ref VPCidr
      Tags:
        - Key: Name
          Value: !Sub '${Namespace}-pvtlink-inbound'

  PvtLinkSecurityGroupALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${Namespace}-pvtlink-outbound'
      GroupDescription: 'This security group will allow internal traffic'
      VpcId: '{{resolve:ssm:dm-vpc-VPCId:1}}'
      SecurityGroupIngress:
        - Description: 'Grant access to traffic flow'
          IpProtocol: '-1'
          CidrIp: !Ref VPCidr
        - Description: 'Grant access to  port 443 from Gateway account'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref GatewayVPCidr
      SecurityGroupEgress:
        - Description: 'Grant access to local HTTPS flow'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VPCidr
        - Description: 'Grant access to local HTTPS flow on port 8443'
          IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: !Ref VPCidr
        - Description: 'Grant access to local HTTP flow on port 8080'
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !Ref VPCidr
      Tags:
        - Key: Name
          Value: !Sub '${Namespace}-pvtlink-outbound'

  NLB:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
            - E2503
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: 'on'
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: 'false'
      Name: !Sub '${Namespace}-pvtlink-nlb'
      SecurityGroups: 
        - !Ref PvtLinkSecurityGroupNLB
      Scheme: internal
      Subnets:
        - !Ref SubnetId1
        - !Ref SubnetId2
        - !Ref SubnetId3
      Type: network
 
  NLBV2Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NLB
      Port: 443
      Protocol: TCP
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref ALBTargetGroup

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: 'false'
        - Key: routing.http2.enabled
          Value: 'false'
      Name: !Sub '${Namespace}-pvtlink-alb'
      SecurityGroups: 
        - !Ref PvtLinkSecurityGroupALB
      Scheme: internal
      Subnets:
        - !Ref SubnetId1
        - !Ref SubnetId2
        - !Ref SubnetId3
      Type: application

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: 'true'
      Name: !Sub '${Namespace}-pvtlink-alb-tg'
      Port: 443
      Protocol: TCP
      TargetType: alb
      HealthCheckPath: '/'
      HealthCheckProtocol: HTTPS
      Targets: 
        - Id: !Ref ALB
          Port: 443
      VpcId: !Ref VPCId

  ALBV2Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 443
      Protocol: HTTPS
      SslPolicy: "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
      Certificates:
        - CertificateArn: !Ref certificateArn
      DefaultActions:
      - Type: fixed-response
        FixedResponseConfig:
          StatusCode: 200
          MessageBody: 'Please check your url added in browser'
  
  ALBTGDmFitAppsUI:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
       HealthCheckEnabled: 'true'
       Name: !Sub '${Namespace}-fitapps-ui-tg'
       Port: 443
       Protocol: HTTPS
       TargetType: 'ip'
       VpcId: !Ref VPCId

  ALBTGBatch:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Namespace}-batch-pvtlink-tg'
      Port: 8443
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: '/CRSServicesWeb/public/live'
      Protocol: HTTPS
      TargetType: 'ip'
      VpcId: !Ref VPCId
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: true
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: !Sub '${Namespace}-batch-pvtlink-tg'
  
  ALBTGBlazeRMA:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Namespace}-blazerma-pvtlink-tg'
      Port: 8443
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: '/dm-blaze-rma/framework/vendors/jquery/custom-jquery-migrate.js'
      Protocol: HTTPS
      TargetType: 'ip'
      VpcId: !Ref VPCId
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: true
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: !Sub '${Namespace}-blazerma-pvtlink-tg'
  
  ALBTGFilePrssr:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Namespace}-fileprocessor-pvtlink-tg'
      Port: 8443
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: '/dm-file-processor/public/live'
      Protocol: HTTPS
      TargetType: 'ip'
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub '${Namespace}-fileprocessor-pvtlink-tg'
  
  ALBTGRestAPI:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Namespace}-restapi-pvtlink-tg'
      Port: 8443
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: '/dm-rest-services/public/live'
      Protocol: HTTPS
      TargetType: 'ip'
      VpcId: !Ref VPCId
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: true
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: !Sub '${Namespace}-restapi-pvtlink-tg'

  ListenerRuleDMFitAppsUI:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ALBTGDmFitAppsUI
      Conditions:
        - Field: path-pattern
          Values: 
            - '/debtmanager*'       
      ListenerArn: !Ref ALBV2Listener
      Priority: 1    

  ListenerRuleBatch:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ALBTGBatch
      Conditions:
        - Field: path-pattern
          Values: 
            - '/CRSServicesWeb*'       
      ListenerArn: !Ref ALBV2Listener
      Priority: 2

  ListenerRuleBlazeRMA:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ALBTGBlazeRMA
      Conditions:
        - Field: path-pattern
          Values: 
            - '/dm-blaze-rma*'      
      ListenerArn: !Ref ALBV2Listener
      Priority: 3

  ListenerRuleFilePrssr:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ALBTGFilePrssr
      Conditions:
        - Field: path-pattern
          Values: 
            - '/dm-file-processor*'       
      ListenerArn: !Ref ALBV2Listener
      Priority: 4
  
  ListenerRuleRestAPI:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ALBTGRestAPI
      Conditions:
        - Field: path-pattern
          Values: 
            - '/dm-rest-services*'      
      ListenerArn: !Ref ALBV2Listener
      Priority: 5
#################################End of Cloud formation Template ########################################################
