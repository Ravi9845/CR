stage('Scale EKS Node Group') {
    steps {
        script {
            withAWS(region: CICD_REGION, roleAccount: CICD_ACCOUNT_ID, role: CICD_REGION_ROLE, duration: 3600) {
                withAWS(region: AWS_DEPLOYMENT_REGION, roleAccount: AWS_ACCOUNT_ID, role: AWS_IAM_ROLE_NAME, duration: 3600) {
                    
                    // Define the desired capacities for the two node groups
                    def desired_capacities = [
                        "nodegroupA": "3",  // Desired capacity for node group A
                        "nodegroupB": "2"   // Desired capacity for node group B
                    ]

                    // Check the operation type (start or stop)
                    def operationType = op_eks.toLowerCase() // Convert to lowercase for consistent comparison
                    echo "Operation Type: ${operationType}"

                    // Get the desired capacity for the selected node group
                    def selected_capacity = desired_capacities[eks_nodegroup]

                    if (selected_capacity != null) {
                        // Initialize scaling parameters
                        def min_size, max_size, desired_size

                        // Use switch to determine scaling parameters based on operation type
                        switch (operationType) {
                            case 'start':
                                min_size = selected_capacity
                                max_size = selected_capacity
                                desired_size = selected_capacity
                                break
                            case 'stop':
                                min_size = "1" // Keep minSize as 1
                                max_size = "0" // Limit maxSize to 1 
                                desired_size = "0" // Set desiredSize to 0 to stop
                                break
                            default:
                                error("Invalid operation type: ${operationType}")
                        }

                        echo "Scaling node group ${eks_nodegroup} to desired capacity: ${desired_size} with min size: ${min_size} and max size: ${max_size}"

                        // Execute the scaling command
                        def scale_nodegroup = sh (
                            script: "aws eks update-nodegroup-config --cluster-name $eks_cluster --nodegroup-name $eks_nodegroup --scaling-config minSize=$min_size,maxSize=$max_size,desiredSize=$desired_size",
                            returnStdout: true
                        ).trim()

                        echo "Scaled node group $eks_nodegroup to desired capacity $desired_size with min size $min_size and max size $max_size"
                    } else {
                        echo "Node group ${eks_nodegroup} not found"
                    }
                }
            }
        }
    }
}
