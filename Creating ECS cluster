                  InstanceId = sh(script:'aws ec2 describe-instances --filters Name=tag:Name,Values=dm-DebtManager-activemq-asg --query "Reservations[*].Instances[*].InstanceId" --output text', returnStdout:true).trim()
                  def lines = InstanceId.readLines()
                    InstanceId_asg  =lines[0].trim()
                  echo "$EC2_Instance ID is $InstanceId"

                  // get instance status
                   def instance_status = sh(script:'aws ec2 describe-instances --filters Name=tag:Name,Values=dm-DebtManager-activemq-asg "Name=instance-state-name,Values=running,stopped" | jq \'.Reservations[0].Instances[0].State.Name\' | tr -d \'"\'' , returnStdout:true).trim()    
                     
                  switch (dmuserchoice){
                    case "start":
                          if ("$instance_status"=="stopped"){
                            start_instances = sh(script: "aws ec2 start-instances --instance-ids $InstanceId", returnStdout:true).trim()
                            echo "Instance $InstanceId is now started"
                          }
                          else if ("$instance_status"=="running"){
                              echo "Instance $InstanceId is already running"
                          }
                          else{
                            echo "ERROR"
                          }
                    break;

                    case "stop":
                          if ("$instance_status"=="stopped"){
                            echo "Instance $InstanceId is already in stop state"
                          }
                          else if ("$instance_status"=="running"){
                            stop_instances = sh(script: "aws ec2 stop-instances --instance-ids $InstanceId", returnStdout:true).trim()
                            echo "Stopped - $InstanceId"
                          }
                    break;
                  }
